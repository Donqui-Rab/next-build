{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\eaglemart\\\\nextjs\\\\components\\\\menu.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Menu } from 'antd';\nvar SubMenu = Menu.SubMenu; // submenu keys of first level\n\nvar rootSubmenuKeys = ['sub1', 'sub2', 'sub4'];\nexport default function Sider(_ref) {\n  _s();\n\n  var data = _ref.data;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openKeys = _React$useState2[0],\n      setOpenKeys = _React$useState2[1];\n\n  var rootMenu = data.filter(function (item) {\n    return item.parent_id === 0;\n  });\n  console.log(rootMenu);\n\n  var onOpenChange = function onOpenChange(keys) {\n    // const latestOpenKey = keys.find(key => openKeys.indexOf(key) === -1);\n    // if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n    //   setOpenKeys(keys);\n    // } else {\n    //   setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\n    // }\n    setOpenKeys(keys);\n  };\n\n  var changeRouter = function changeRouter() {\n    setOpenKeys(['sub2']);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    mode: \"inline\",\n    openKeys: openKeys,\n    onOpenChange: onOpenChange,\n    children: [/*#__PURE__*/_jsxDEV(SubMenu, {\n      title: \"Navigation One\"\n    }, \"sub1\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubMenu, {\n      title: \"Navigation Two\"\n    }, \"sub2\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubMenu, {\n      title: \"Navigation Three\"\n    }, \"sub4\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sider, \"z6IZ+yMATnXan0WSt0yyS9NtWdw=\");\n\n_c = Sider;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sider\");","map":{"version":3,"sources":["F:/eaglemart/nextjs/components/menu.js"],"names":["React","Menu","SubMenu","rootSubmenuKeys","Sider","data","useState","openKeys","setOpenKeys","rootMenu","filter","item","parent_id","console","log","onOpenChange","keys","changeRouter"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,IAAT,QAAqB,MAArB;IAEQC,O,GAAYD,I,CAAZC,O,EAER;;AACA,IAAMC,eAAe,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAAxB;AAEA,eAAe,SAASC,KAAT,OAAsB;AAAA;;AAAA,MAANC,IAAM,QAANA,IAAM;;AAAA,wBACHL,KAAK,CAACM,QAAN,CAAe,EAAf,CADG;AAAA;AAAA,MAC5BC,QAD4B;AAAA,MAClBC,WADkB;;AAGnC,MAAMC,QAAQ,GAAGJ,IAAI,CAACK,MAAL,CAAY,UAAAC,IAAI;AAAA,WAAEA,IAAI,CAACC,SAAL,KAAiB,CAAnB;AAAA,GAAhB,CAAjB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AAEA,MAAMM,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI,EAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACAR,IAAAA,WAAW,CAACQ,IAAD,CAAX;AACD,GARD;;AASA,MAAMC,YAAY,GAAE,SAAdA,YAAc,GAAK;AACvBT,IAAAA,WAAW,CAAC,CAAC,MAAD,CAAD,CAAX;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,QAAQ,EAAED,QAA9B;AAAwC,IAAA,YAAY,EAAEQ,YAAtD;AAAA,4BACE,QAAC,OAAD;AAAoB,MAAA,KAAK,EAAC;AAA1B,OAAa,MAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,OAAD;AAAoB,MAAA,KAAK,EAAC;AAA1B,OAAa,MAAb;AAAA;AAAA;AAAA;AAAA,YAPF,eAeE,QAAC,OAAD;AAAoB,MAAA,KAAK,EAAC;AAA1B,OAAa,MAAb;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA5CuBX,K;;KAAAA,K;AA4CvB","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Menu } from 'antd';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\n// submenu keys of first level\r\nconst rootSubmenuKeys = ['sub1', 'sub2', 'sub4'];\r\n\r\nexport default function Sider({data}){\r\n  const [openKeys, setOpenKeys] = React.useState([]);\r\n\r\n  const rootMenu = data.filter(item=>item.parent_id===0);\r\n\r\n  console.log(rootMenu);\r\n\r\n  const onOpenChange = keys => {\r\n    // const latestOpenKey = keys.find(key => openKeys.indexOf(key) === -1);\r\n    // if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n    //   setOpenKeys(keys);\r\n    // } else {\r\n    //   setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\r\n    // }\r\n    setOpenKeys(keys);\r\n  };\r\n  const changeRouter =() =>{\r\n    setOpenKeys(['sub2'])\r\n  }\r\n  \r\n  return (\r\n    <Menu mode=\"inline\" openKeys={openKeys} onOpenChange={onOpenChange}>\r\n      <SubMenu key=\"sub1\" title=\"Navigation One\">\r\n        {/* <Menu.Item key=\"1\">Option 1</Menu.Item>\r\n        <Menu.Item key=\"2\">Option 2</Menu.Item>\r\n        <Menu.Item key=\"3\">Option 3</Menu.Item>\r\n        <Menu.Item key=\"4\">Option 4</Menu.Item> */}\r\n      </SubMenu>\r\n      <SubMenu key=\"sub2\" title=\"Navigation Two\">\r\n        {/* <Menu.Item key=\"5\">Option 5</Menu.Item>\r\n        <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n        <SubMenu key=\"sub3\" title=\"Submenu\">\r\n          <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n          <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n        </SubMenu> */}\r\n      </SubMenu>\r\n      <SubMenu key=\"sub4\" title=\"Navigation Three\">\r\n        {/* <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n        <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n        <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n        <Menu.Item key=\"12\">Option 12</Menu.Item> */}\r\n      </SubMenu>\r\n    </Menu>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
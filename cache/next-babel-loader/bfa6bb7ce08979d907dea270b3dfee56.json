{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { category } from '../data/category';\nexport function getCategory() {\n  var root = category.filter(item => item.parent_id === 0);\n  console.log(root);\n  makeMenuTree(root);\n  return category;\n}\n\nfunction makeMenuTree(root) {\n  root.map(rootitem => {\n    branch = category.filter(item => rootitem.id === item.parent_id);\n    Object.assign(item, _objectSpread(_objectSpread({}, item), {}, {\n      children: branch\n    }));\n  });\n  console.log(root);\n}","map":{"version":3,"sources":["F:/eaglemart/nextjs/libs/category.js"],"names":["category","getCategory","root","filter","item","parent_id","console","log","makeMenuTree","map","rootitem","branch","id","Object","assign","children"],"mappings":";;;;;;AAAA,SAAQA,QAAR,QAAuB,kBAAvB;AAEA,OAAO,SAASC,WAAT,GAAsB;AACzB,MAAIC,IAAI,GAAGF,QAAQ,CAACG,MAAT,CAAgBC,IAAI,IAAEA,IAAI,CAACC,SAAL,KAAiB,CAAvC,CAAX;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAM,EAAAA,YAAY,CAACN,IAAD,CAAZ;AACA,SAAOF,QAAP;AACH;;AACD,SAASQ,YAAT,CAAsBN,IAAtB,EAA2B;AACvBA,EAAAA,IAAI,CAACO,GAAL,CAASC,QAAQ,IAAE;AACfC,IAAAA,MAAM,GAAGX,QAAQ,CAACG,MAAT,CAAgBC,IAAI,IAAEM,QAAQ,CAACE,EAAT,KAAgBR,IAAI,CAACC,SAA3C,CAAT;AACAQ,IAAAA,MAAM,CAACC,MAAP,CAAcV,IAAd,kCAAwBA,IAAxB;AAA8BW,MAAAA,QAAQ,EAACJ;AAAvC;AACH,GAHD;AAKAL,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACH","sourcesContent":["import {category} from '../data/category';\r\n\r\nexport function getCategory(){\r\n    var root = category.filter(item=>item.parent_id===0);\r\n    console.log(root);\r\n    makeMenuTree(root);\r\n    return category;\r\n}\r\nfunction makeMenuTree(root){\r\n    root.map(rootitem=>{\r\n        branch = category.filter(item=>rootitem.id === item.parent_id)\r\n        Object.assign(item, {...item, children:branch})\r\n    })\r\n\r\n    console.log(root);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\eaglemart\\\\nextjs\\\\components\\\\menu.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Menu } from 'antd';\nimport { getCategory } from '../libs/category';\nconst {\n  SubMenu\n} = Menu; // submenu keys of first level\n\nconst rootSubmenuKeys = ['sub1', 'sub2', 'sub4'];\nexport default function Sider({\n  data\n}) {\n  const [openKeys, setOpenKeys] = React.useState([]);\n  const [category, setCategory] = React.useState([]);\n  React.useEffect(() => {\n    const newCategory = getCategory();\n    setCategory([...newCategory]);\n  }, []);\n\n  const onOpenChange = keys => {\n    const latestOpenKey = keys.find(key => openKeys.indexOf(key) === -1);\n\n    if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n      setOpenKeys(keys);\n    } else {\n      setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\n    } // setOpenKeys(keys);\n\n  };\n\n  const changeRouter = () => {\n    setOpenKeys(['sub2']);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    mode: \"inline\",\n    openKeys: openKeys,\n    onOpenChange: onOpenChange,\n    children: category.map(category_ch1 => {\n      const br_1 = category_ch1.children;\n      console.log(br_1);\n\n      if (br_1.length === 0) {\n        return /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: \"Option 1\"\n        }, category_ch1.category_, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 22\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n;","map":{"version":3,"sources":["F:/eaglemart/nextjs/components/menu.js"],"names":["React","Menu","getCategory","SubMenu","rootSubmenuKeys","Sider","data","openKeys","setOpenKeys","useState","category","setCategory","useEffect","newCategory","onOpenChange","keys","latestOpenKey","find","key","indexOf","changeRouter","map","category_ch1","br_1","children","console","log","length","category_"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcF,IAApB,C,CAEA;;AACA,MAAMG,eAAe,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAAxB;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAAsB;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,KAAK,CAACS,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,KAAK,CAACS,QAAN,CAAe,EAAf,CAAhC;AAEAT,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAI;AAClB,UAAMC,WAAW,GAAGX,WAAW,EAA/B;AACAS,IAAAA,WAAW,CAAC,CAAC,GAAGE,WAAJ,CAAD,CAAX;AACD,GAHD,EAGG,EAHH;;AAKA,QAAMC,YAAY,GAAGC,IAAI,IAAI;AAC3B,UAAMC,aAAa,GAAGD,IAAI,CAACE,IAAL,CAAUC,GAAG,IAAIX,QAAQ,CAACY,OAAT,CAAiBD,GAAjB,MAA0B,CAAC,CAA5C,CAAtB;;AACA,QAAId,eAAe,CAACe,OAAhB,CAAwBH,aAAxB,MAA2C,CAAC,CAAhD,EAAmD;AACjDR,MAAAA,WAAW,CAACO,IAAD,CAAX;AACD,KAFD,MAEO;AACLP,MAAAA,WAAW,CAACQ,aAAa,GAAG,CAACA,aAAD,CAAH,GAAqB,EAAnC,CAAX;AACD,KAN0B,CAO3B;;AACD,GARD;;AASA,QAAMI,YAAY,GAAE,MAAK;AACvBZ,IAAAA,WAAW,CAAC,CAAC,MAAD,CAAD,CAAX;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,QAAQ,EAAED,QAA9B;AAAwC,IAAA,YAAY,EAAEO,YAAtD;AAAA,cAEIJ,QAAQ,CAACW,GAAT,CAAaC,YAAY,IACvB;AACE,YAAMC,IAAI,GAAGD,YAAY,CAACE,QAA1B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,UAAGA,IAAI,CAACI,MAAL,KAAc,CAAjB,EAAmB;AACjB,4BAAO,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA,WAAiBL,YAAY,CAACM,SAA9B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KAPH;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;AAAA","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Menu } from 'antd';\r\nimport { getCategory } from '../libs/category'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\n// submenu keys of first level\r\nconst rootSubmenuKeys = ['sub1', 'sub2', 'sub4'];\r\n\r\nexport default function Sider({data}){\r\n  const [openKeys, setOpenKeys] = React.useState([]);\r\n  const [category, setCategory] = React.useState([]);\r\n\r\n  React.useEffect(()=>{\r\n    const newCategory = getCategory();\r\n    setCategory([...newCategory]);\r\n  }, [])\r\n\r\n  const onOpenChange = keys => {\r\n    const latestOpenKey = keys.find(key => openKeys.indexOf(key) === -1);\r\n    if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n      setOpenKeys(keys);\r\n    } else {\r\n      setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\r\n    }\r\n    // setOpenKeys(keys);\r\n  };\r\n  const changeRouter =() =>{\r\n    setOpenKeys(['sub2'])\r\n  }\r\n  \r\n  return (\r\n    <Menu mode=\"inline\" openKeys={openKeys} onOpenChange={onOpenChange}>\r\n      {\r\n        category.map(category_ch1=>\r\n          {\r\n            const br_1 = category_ch1.children;\r\n            console.log(br_1);\r\n            if(br_1.length===0){\r\n              return <Menu.Item key={ category_ch1.category_ }>Option 1</Menu.Item>\r\n            }\r\n          })\r\n      }\r\n      {/* <SubMenu key=\"sub1\" title=\"Navigation One\">\r\n        <Menu.Item key=\"1\">Option 1</Menu.Item>\r\n        <Menu.Item key=\"2\">Option 2</Menu.Item>\r\n        <Menu.Item key=\"3\">Option 3</Menu.Item>\r\n        <Menu.Item key=\"4\">Option 4</Menu.Item>\r\n      </SubMenu>\r\n      <SubMenu key=\"sub2\" title=\"Navigation Two\">\r\n        <Menu.Item key=\"5\">Option 5</Menu.Item>\r\n        <Menu.Item key=\"6\">Option 6</Menu.Item>\r\n        <SubMenu key=\"sub3\" title=\"Submenu\">\r\n          <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n          <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n        </SubMenu>\r\n      </SubMenu>\r\n      <SubMenu key=\"sub4\" title=\"Navigation Three\">\r\n        <Menu.Item key=\"9\">Option 9</Menu.Item>\r\n        <Menu.Item key=\"10\">Option 10</Menu.Item>\r\n        <Menu.Item key=\"11\">Option 11</Menu.Item>\r\n        <Menu.Item key=\"12\">Option 12</Menu.Item>\r\n      </SubMenu> */}\r\n    </Menu>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}